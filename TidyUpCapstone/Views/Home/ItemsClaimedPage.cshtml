@model TidyUpCapstone.Models.ViewModels.Transactions.ClaimedItemsViewModel
@{
    ViewBag.HideNavigation = false;
    ViewData["Title"] = "Items Claimed";
}

<link rel="stylesheet" href="~/css/ItemsClaimedPage.css" asp-append-version="true" />

<!-- Toast Notification Container -->
<div id="toast-container" class="fixed top-4 right-4 z-50 space-y-3"></div>

<!-- Alert Modal Container -->
<div id="alert-modal-container" class="fixed inset-0 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
        <div class="relative bg-white rounded-2xl shadow-2xl max-w-md w-full transform transition-all">
            <div id="modal-content" class="p-6"></div>
        </div>
    </div>
</div>

<div class="items-claimed-container">
    <!-- Header Section -->
    <div class="page-header">
        <div class="header-content">
            <div class="header-left">
                <h1 class="page-title">
                    <i class="fas fa-check-circle title-icon"></i>
                    Items Claimed
                </h1>
                <p class="page-subtitle">Track your claimed items and transaction progress</p>
            </div>
            <div class="header-right">
                <div class="stats-summary">
                    <div class="stat-card">
                        <div class="stat-number">@Model.Statistics.TotalClaimed</div>
                        <div class="stat-label">Total Claimed</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.Statistics.PendingCount</div>
                        <div class="stat-label">Pending</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.Statistics.CompletedCount</div>
                        <div class="stat-label">Completed</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter and Search Section -->
    <div class="filter-section">
        <div class="filter-content">
            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="searchInput" placeholder="Search claimed items..." class="search-input" value="@Model.SearchCriteria.Search">
            </div>
            <div class="filter-controls">
                <select id="statusFilter" class="filter-select">
                    @foreach (var status in Model.StatusOptions)
                    {
                        <option value="@status.Key" selected="@(Model.SearchCriteria.Status == status.Key)">@status.Value</option>
                    }
                </select>
                <select id="categoryFilter" class="filter-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Key" selected="@(Model.SearchCriteria.CategoryId == category.Key)">@category.Value</option>
                    }
                </select>
                <select id="sortFilter" class="filter-select">
                    @foreach (var sort in Model.SortOptions)
                    {
                        <option value="@sort.Key" selected="@(Model.SearchCriteria.SortBy == sort.Key)">@sort.Value</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <!-- Items Grid -->
    <div class="items-grid">
        @if (Model.Transactions.Any())
        {
            @foreach (var transaction in Model.Transactions)
            {
                <div class="item-card" data-status="@transaction.TransactionStatus.ToString().ToLower()" data-category="@transaction.ItemId">
                    <div class="item-image">
                        <img src="@transaction.ItemImageUrl" alt="@transaction.ItemTitle" loading="lazy">
                        <div class="status-badge status-@transaction.TransactionStatus.ToString().ToLower()">
                          @switch (transaction.TransactionStatus)
                        {
                            case TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Pending:
                                <i class="fas fa-clock"></i>
                                <span>Pending</span>
                                break;
                            case TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Escrowed: 
                                <i class="fas fa-sync-alt"></i>
                                <span>In Progress</span>
                                break;
                            case TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Confirmed: 
                                <i class="fas fa-check"></i>
                                <span>Completed</span>
                                break;
                            case TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Cancelled:
                                <i class="fas fa-ban"></i>
                                <span>Cancelled</span>
                                break;
                        }
                        </div>
                    </div>
                    <div class="item-content">
                        <div class="item-header">
                            <h3 class="item-title">@transaction.ItemTitle</h3>
                            <div class="item-price">@transaction.TokenAmount</div>
                        </div>
                        <div class="item-details">
                            <div class="item-meta">
                                <span class="meta-item">
                                    <i class="fas fa-user"></i>
                                    @transaction.SellerUsername
                                </span>
                                <span class="meta-item">
                                    <i class="fas fa-calendar"></i>
                                    @transaction.CreatedAt.ToString("MMM dd, yyyy")
                                </span>
                            </div>
                        </div>
                        <div class="item-actions">
                           @if (transaction.TransactionStatus == TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Pending ||
                                 transaction.TransactionStatus == TidyUpCapstone.Models.Entities.Transactions.TransactionStatus.Escrowed) 
                            {
                                <a href="@Url.Action("ContactSeller", "ItemsClaimed", new { transactionId = transaction.TransactionId })" class="btn btn-primary btn-sm contact-seller">
                                    <i class="fas fa-comments"></i>
                                    Contact Seller
                                </a>
                            }
                            <a href="@Url.Action("ViewDetails", "ItemsClaimed", new { transactionId = transaction.TransactionId })" class="btn btn-outline btn-sm view-details">
                                <i class="fas fa-eye"></i>
                                View Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state" style="display: block;">
                <div class="empty-icon">
                    <i class="fas fa-inbox"></i>
                </div>
                <h3 class="empty-title">No claimed items found</h3>
                <p class="empty-description">You haven't claimed any items yet. Start browsing items to find something you'd like!</p>
                <a href="/Items/Browse" class="btn btn-primary">
                    <i class="fas fa-search"></i>
                    Browse Items
                </a>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="pagination-container">
            <nav aria-label="Items pagination">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ItemsClaimedPage", "Home", new { 
                                status = Model.SearchCriteria.Status, 
                                categoryId = Model.SearchCriteria.CategoryId, 
                                search = Model.SearchCriteria.Search, 
                                sortBy = Model.SearchCriteria.SortBy, 
                                page = Model.CurrentPage - 1 
                            })">
                                <i class="fas fa-chevron-left"></i>
                                Previous
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">
                                <i class="fas fa-chevron-left"></i>
                                Previous
                            </span>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            @if (i == Model.CurrentPage)
                            {
                                <span class="page-link">@i</span>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("ItemsClaimedPage", "Home", new { 
                                    status = Model.SearchCriteria.Status, 
                                    categoryId = Model.SearchCriteria.CategoryId, 
                                    search = Model.SearchCriteria.Search, 
                                    sortBy = Model.SearchCriteria.SortBy, 
                                    page = i 
                                })">@i</a>
                            }
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ItemsClaimedPage", "Home", new { 
                                status = Model.SearchCriteria.Status, 
                                categoryId = Model.SearchCriteria.CategoryId, 
                                search = Model.SearchCriteria.Search, 
                                sortBy = Model.SearchCriteria.SortBy, 
                                page = Model.CurrentPage + 1 
                            })">
                                Next
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">
                                Next
                                <i class="fas fa-chevron-right"></i>
                            </span>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<script src="~/js/ItemsClaimedPage.js" asp-append-version="true"></script>
<script src="https://cdn.tailwindcss.com"></script>